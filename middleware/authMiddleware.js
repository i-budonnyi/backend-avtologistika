const jwt = require("jsonwebtoken");

const JWT_SECRET = process.env.JWT_SECRET || "your_secret_key";

const authenticateToken = (req, res, next) => {
    const authHeader = req.headers["authorization"];
    console.log("[authMiddleware] üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó:", authHeader);

    if (!authHeader) {
        console.warn("[authMiddleware] ‚ùå –í—ñ–¥—Å—É—Ç–Ω—ñ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ Authorization!");
        return res.status(401).json({ message: "–ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π: –≤—ñ–¥—Å—É—Ç–Ω—ñ–π —Ç–æ–∫–µ–Ω" });
    }

    const parts = authHeader.split(" ");
    if (parts.length !== 2 || parts[0] !== "Bearer") {
        console.warn("[authMiddleware] ‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç —Ç–æ–∫–µ–Ω–∞!");
        return res.status(401).json({ message: "–ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó: –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç —Ç–æ–∫–µ–Ω–∞" });
    }

    const token = parts[1];

    try {
        const decoded = jwt.verify(token, JWT_SECRET);
        console.log("[authMiddleware] ‚úÖ –¢–æ–∫–µ–Ω —É—Å–ø—ñ—à–Ω–æ —Ä–æ–∑—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–π:", JSON.stringify(decoded, null, 2));

        if (!decoded.id) {
            console.warn("[authMiddleware] ‚ùå –¢–æ–∫–µ–Ω –Ω–µ –º—ñ—Å—Ç–∏—Ç—å `id`!");
            return res.status(401).json({ message: "–ù–µ–¥—ñ–π—Å–Ω–∏–π —Ç–æ–∫–µ–Ω: –≤—ñ–¥—Å—É—Ç–Ω—ñ–π id —É —Ç–æ–∫–µ–Ω—ñ" });
        }

        req.user = {
            id: decoded.id,
            first_name: decoded.first_name || null,
            last_name: decoded.last_name || null,
            email: decoded.email || null,
            phone: decoded.phone || null
        };

        console.log("[authMiddleware] ‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è –ø—Ä–æ–π–¥–µ–Ω–∞, –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á:", req.user);
        next();
    } catch (error) {
        console.error("[authMiddleware] ‚ùå –ù–µ–¥—ñ–π—Å–Ω–∏–π —Ç–æ–∫–µ–Ω!", error);
        return res.status(401).json({ message: "–ù–µ–¥—ñ–π—Å–Ω–∏–π —Ç–æ–∫–µ–Ω", error: error.message });
    }
};

module.exports = authenticateToken;
